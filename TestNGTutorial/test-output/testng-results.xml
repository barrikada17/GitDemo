<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-19T11:04:47 CEST" name="Loan Department" finished-at="2021-04-19T11:04:47 CEST" duration-ms="26">
    <groups>
      <group name="Smoke">
        <method signature="Day2.plan()[pri:0, instance:test.Day2@6c779568]" name="plan" class="test.Day2"/>
        <method signature="Day4.mobileLoginHomeLoan()[pri:0, instance:test.Day4@7e9131d5]" name="mobileLoginHomeLoan" class="test.Day4"/>
        <method signature="Day3.mobileLoginCarLoan()[pri:0, instance:test.Day3@272ed83b]" name="mobileLoginCarLoan" class="test.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2021-04-19T11:04:47 CEST" name="Car Loan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="26">
      <class name="test.Day1">
        <test-method is-config="true" signature="aSuite()[pri:0, instance:test.Day1@2cdd0d4b]" started-at="2021-04-19T11:04:47 CEST" name="aSuite" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aSuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="bSuite()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="bSuite" finished-at="2021-04-19T11:04:47 CEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="beforeClass" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="mobileLoginCarLoan()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="mobileLoginCarLoan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="beforeEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="afterEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="beforeEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSigoutCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="mobileSigoutCarLoan" data-provider="getData" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSigoutCarLoan -->
        <test-method signature="mobileSigoutCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="mobileSigoutCarLoan" data-provider="getData" finished-at="2021-04-19T11:04:47 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSigoutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="afterEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="beforeEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSigoutCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="mobileSigoutCarLoan" data-provider="getData" finished-at="2021-04-19T11:04:47 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSigoutCarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="beforeEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="afterEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method signature="webLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="webLoginCarLoan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="afterEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="beforeEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="afterEvery" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Day3@272ed83b]" started-at="2021-04-19T11:04:47 CEST" name="afterClass" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2021-04-19T11:04:47 CEST" name="Personal loan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="26">
      <class name="test.Day1">
        <test-method signature="demo()[pri:0, instance:test.Day1@2cdd0d4b]" started-at="2021-04-19T11:04:47 CEST" name="demo" finished-at="2021-04-19T11:04:47 CEST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.demo(Day1.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Day1@2cdd0d4b]" started-at="2021-04-19T11:04:47 CEST" name="lastExecution" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.Day2@6c779568]" started-at="2021-04-19T11:04:47 CEST" name="prerequiste" finished-at="2021-04-19T11:04:47 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="plan()[pri:0, instance:test.Day2@6c779568]" started-at="2021-04-19T11:04:47 CEST" name="plan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- plan -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="loginAPIHomeLoan()[pri:0, instance:test.Day4@7e9131d5]" started-at="2021-04-19T11:04:47 CEST" name="loginAPIHomeLoan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPIHomeLoan -->
        <test-method signature="mobileLoginHomeLoan()[pri:0, instance:test.Day4@7e9131d5]" started-at="2021-04-19T11:04:47 CEST" name="mobileLoginHomeLoan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method signature="webLoginHomeLoan(java.lang.String)[pri:0, instance:test.Day4@7e9131d5]" started-at="2021-04-19T11:04:47 CEST" name="webLoginHomeLoan" finished-at="2021-04-19T11:04:47 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
